<tool id="DADA2.R" name="DADA2 core" version="1.0">
  <stdio>
    <exit_code level="fatal" range="1:"/>
  </stdio>
  <!--<version_command></version_command> -->
  <command><![CDATA[
dada2.R
#if $single_or_paired.opts == "paired_collection":
	-f ${' '.join(map(str, $single_or_paired.fq_input.forward))}
	-r ${' '.join(map(str, $single_or_paired.fq_input.reverse))}
	--samp_list ${' '.join(map(str, (x.name for x in $single_or_paired.fq_input.forward)))}
#else if $single_or_paired.opts == "paired":
	-f ${' '.join(map(str, $single_or_paired.fwd_fq))}
	-r ${' '.join(map(str, $single_or_paired.rev_fq))}
	--samp_list ${' '.join(map(str, (x.name for x in $single_or_paired.fwd_fq)))}
#else if $single_or_paired.opts == "single":
	-f ${' '.join(map(str, $single_or_paired.fwd_fq))}
	--samp_list ${' '.join(map(str, (x.name for x in $single_or_paired.fwd_fq)))}
#end if 

#if $sample_names.opts is 'delim':
	-s ${' '.join(map(str, $sample_names.fields))}
	-S $sample_names.delim
# else if $sample_names.opts is 'regex':
	-R $sample_names.regex
#end if 

--asv_out $asv_out

#if $chimrm and $chimrm is not None:
--chimrm $chimrm
#end if

#if $adv.LEARN_READS_N and $adv.LEARN_READS_N is not None:
--LEARN_READS_N $adv.LEARN_READS_N
#end if

#if $adv.OMEGA_A and $adv.OMEGA_A is not None:
--OMEGA_A $adv.OMEGA_A
#end if

#if $adv.USE_QUALS and $adv.USE_QUALS is not None:
--USE_QUALS $adv.USE_QUALS
#end if

#if $adv.USE_KMERS and $adv.USE_KMERS is not None:
--USE_KMERS $adv.USE_KMERS
#end if

#if $adv.KDIST_CUTOFF and $adv.KDIST_CUTOFF is not None:
--KDIST_CUTOFF $adv.KDIST_CUTOFF
#end if

#if $adv.BAND_SIZE and $adv.BAND_SIZE is not None:
--BAND_SIZE $adv.BAND_SIZE
#end if

#if $adv.SCORE_MATRIX and $adv.SCORE_MATRIX is not None:
--SCORE_MATRIX $adv.SCORE_MATRIX
#end if

#if $adv.GAP_PENALTY and $adv.GAP_PENALTY is not None:
--GAP_PENALTY $adv.GAP_PENALTY
#end if

#if $adv.HOMOPOLYMER_GAP_PENALTY and $adv.HOMOPOLYMER_GAP_PENALTY is not None:
--HOMOPOLYMER_GAP_PENALTY $adv.HOMOPOLYMER_GAP_PENALTY
#end if

#if $adv.MIN_FOLD and $adv.MIN_FOLD is not None:
--MIN_FOLD $adv.MIN_FOLD
#end if

#if $adv.MIN_HAMMING and $adv.MIN_HAMMING is not None:
--MIN_HAMMING $adv.MIN_HAMMING
#end if

#if $adv.MAX_CLUST and $adv.MAX_CLUST is not None:
--MAX_CLUST $adv.MAX_CLUST
#end if

#if $adv.MAX_CONSIST and $adv.MAX_CONSIST is not None:
--MAX_CONSIST $adv.MAX_CONSIST
#end if

]]></command>
  <inputs>
	  <!-- READ_INPUT -->
	  <conditional name="single_or_paired">
		  <param name="opts" type="select" label="Is this library mate-paired?">
			  <option value="single">Single-end</option>
			  <option value="paired">Paired-end</option>
			  <option value="paired_collection">Paired-end Dataset Collection</option>
		  </param>
		  <when value="single">
			  <param name="fwd_fq" type="data" format="fastq,fq,fq.gz,fastq.gz,fastq.bz2" multiple= "true" label="FASTQ/FASTA file" help="FASTQ file." />
		  </when>
		  <when value="paired">
			  <param name="fwd_fq" type="data" format="fastq,fq,fq.gz,fastq.gz,fastq.bz2" multiple= "true" label="Mate pair 1" help="FASTQ file." />
			  <param name="rev_fq" type="data" format="fastq,fq,fq.gz,fastq.gz,fastq.bz2" multiple= "true" label="Mate pair 2" help="FASTQ file." />
		  </when>
		  <when value="paired_collection">
			  <param name="fq_input" format="fastq,fq,fq.gz,fastq.gz,fastq.bz2" type="data_collection" collection_type="paired,list:paired" label="FASTQ Paired Dataset" help="" />
		  </when>
	  </conditional>
	  
	<!-- SAMPLE NAMING -->
	  <conditional name="sample_names">
		  <param name="opts" type="select" label="How to extract sample names">
			  <option value="none">Keep full file name</option>
			  <option value="delim">Select delimited field</option>
			  <option value="regex">Use regex</option>
		  </param>
		  <when value="none">
		  </when>
		  <when value="delim">
			  <param name="fields" type="text" multiple="true" value= "1 2 3" label="Fields to select" />
			  <param name="delim" type="text" value="_" label="Field delimiter" help="FASTQ file." />
		  </when>
		  <when value="regex">
			  <param name="regex" type="text" default="(\\w*).*(samp\\d)" help="" />
		  </when>
	  </conditional>

	<!-- NOCHIM -->
	<param name="chimrm" type="select" multiple="false" label="This function is a convenience interface for chimera removal" help="">
		<option value="FALSE">Do not run chimera removal</option>
		<option value="consensus">The samples in the sequence table are all pooled together for bimera identification</option>
		<option value="pooled">The samples in a sequence table are independently checked for bimeras, and a consensus decision on each sequence variant is made</option>
		<option value="per-sample">The samples in a sequence table are independently checked for bimeras, and sequence variants are removed (zeroed-out) from samples independently </option>
	</param>
	<!-- ADVANCED -->
	<section name="adv" title="Advanced Options" expanded="true">
		<param name="LEARN_READS_N" optional="true" type="integer" value="1000000" label="Default 1e6. The minimum number of reads to use for error rate learning. Samples are read into memory until at least this number of reads has been reached, or all provided samples have been read in."/>
		<param name="OMEGA_A" optional="true" type="float" value="1e-40" label="This parameter sets the threshold for when DADA2 calls unique sequences significantly overabundant, and therefore creates a new cluster with that sequence as the center. The default value is 1e-40, which is a conservative setting to avoid making false positive inferences, but which comes at the cost of reducing the ability to identify some rare variants."/>
		<param name="USE_QUALS" optional="true" type="boolean" value="true" label="If TRUE, the dada(...) error model takes into account the consensus quality score of the dereplicated unique sequences. If FALSE, quality scores are ignored. The default is TRUE, however if applying DADA2 to pyrosequenced data it is recommended to set USE_QUALS to FALSE, as quality scores are not informative about substitution error rates in pyrosequencing." />
		<param name="USE_KMERS" optional="true" type="boolean" value="true" label="If TRUE, a 5-mer distance screen is performed prior to performing each pairwise alignment, and if the 5mer-distance is greater than KDIST_CUTOFF, no alignment is performed. TRUE by default." />
		<param name="KDIST_CUTOFF" optional="true" type="float" value="0.42" label="The default value of 0.42 was chosen to screen pairs of sequences that differ by greater 10 percent, and was calibrated on Illumina sequenced 16S amplicon data. The assumption is that sequences that differ by such a large amount cannot be linked by amplicon errors (i.e. if you sequence one, you won`t get a read of other) and so careful (and costly) alignment is unnecessary." />
		<param name="BAND_SIZE" optional="true" type="integer" value="16" label="When set, banded Needleman-Wunsch alignments are performed. Banding restricts the net cumulative number of insertion of one sequence relative to the other. The default value of BAND_SIZE is 16. If DADA is applied to marker genes with high rates of indels, such as the ITS region in fungi, the BAND_SIZE parameter should be increased. Setting BAND_SIZE to a negative number turns off banding (i.e. full Needleman-Wunsch)." />
		<param name="SCORE_MATRIX" optional="true" type="file" label="The path to the score matrix for the Needleman-Wunsch alignment. This is a 4x4 matrix as no ambiguous nucleotides are allowed. Default is nuc44: -4 for mismatches, +5 for matches."/>
		<param name="GAP_PENALTY" optional="true" type="integer" value="-8" label="The cost of gaps in the Needleman-Wunsch alignment. Default is -8." />
		<param name="HOMOPOLYMER_GAP_PENALTY" optional="true" type="integer" label="The cost of gaps in homopolymer regions (&gt;=3 repeated bases). Default is NULL, which causes homopolymer gaps to be treated as normal gaps."/>
		<param name="MIN_FOLD" optional="true" type="integer" value="1" label="The minimum fold-overabundance for sequences to form new clusters. Default value is 1, which means this criteria is ignored."/>
		<param name="MIN_HAMMING" optional="true" type="integer" value="1" label="The minimum hamming-separation for sequences to form new clusters. Default value is 1. which means this criteria is ignored." />
		<param name="MAX_CLUST" optional="true" type="integer" value="0" label="The maximum number of clusters. Once this many clusters have been created, the algorithm terminates regardless of whether the statistical model suggests more sample sequences exist. If set to 0 this argument is ignored. Default value is 0."/>
		<param name="MAX_CONSIST" optional="true" type="integer" value="10" label="The maximum number of steps when selfConsist=TRUE. If convergence is not reached in MAX_CONSIST steps, the algorithm will terminate with a warning message. Default value is 10." />
	</section>
</inputs>
  <outputs>
	<data format= "tsv" label="Name/path to ASV table file output" name="asv_out" />
  </outputs>
  <help><![CDATA[TODO: Write help]]></help>
  <citations>
	  <citation type="bibtex">
		  @misc{githubGeneLab_DADA2_Paired_Pipeline,
		  author = {Erikson, Christian},
		  year = {2018},
		  title = {GeneLab_DADA2_Paired_Pipeline},
		  publisher = {GitHub},
		  journal = {GitHub repository},
		  url = {https://github.com/cErikson/GeneLab_DADA2_Paired_Pipeline},
		  }</citation>
  </citations>
</tool>

